<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AdminOrderMapper">

<!-- 查询订单列表信息 -->
	<select id="findOrderList" resultType="pd">
		SELECT 
		  lof.`id`,
		  lof.`create_time`,
		  lof.`pay_time`,
		  lof.`order_code`,
		  lof.`order_state`,
		  lof.`pay_order_id` AS payOrderId,
		  lof.is_sms_dri AS isSmsDri,
		  loi.`id` AS itemId,
		  loi.`price`,
		  loi.`down_payment`,
		  loi.`start_time`,
		  loi.`end_time`,
		  loi.`person_name`,
		  loi.`person_phone`,
		  loi.`pay_method`,
		  loi.`name`,
		  loi.total_km as totalKm,
		  sau.`USERNAME` AS username,
		  su.`USERNAME` AS assessor
		FROM
		  `lxy_order_form` AS lof
		  LEFT JOIN `lxy_order_item` AS loi ON lof.`id` = loi.`form_id`
		  LEFT JOIN `sys_app_user` AS sau ON sau.`USER_ID` = lof.`user_id`
		  LEFT JOIN `sys_user`  AS su ON su.`USER_ID` = lof.`assessor`
		WHERE lof.`order_type` = 'default' 
		  AND lof.is_delete = 0 AND lof.state='ADD'
		<if test=" nickName != null and nickName !='' ">
			AND su.`USERNAME` like CONCAT('%', #{nickName},'%')
		</if>
		<if test=" orderCode != null and orderCode !='' ">
			and lof.order_code  = #{orderCode}
		</if>
		<if test=" payOrderId != null and payOrderId !='' ">
			and lof.pay_order_id  = #{payOrderId}
		</if>
		<if test=" personPhone != null and personPhone !='' ">
			and su.`PHONE`  = #{personPhone}
		</if>
		<if test=" orderState != null and orderState !='' ">
			and lof.`order_state`  = #{orderState}
		</if>
		<if test=" orderTime != null and orderTime !='' ">
			and DATE_FORMAT(lof.`create_time`, '%Y-%m-%d')  = str_to_date(#{orderTime} , '%Y-%m-%d') 
		</if>
		ORDER BY lof.`create_time` DESC
		<if test="showLine != null and showLine !='' ">
			LIMIT ${startLine} , ${showLine}
		</if>
	</select>
	
	<!--  -->
	<select id="findOrderListCount" resultType="Integer">
		SELECT 
		  count(1)
		FROM
		  `lxy_order_form` AS lof 
		  LEFT JOIN `lxy_order_item` AS loi ON lof.`id` = loi.`form_id` 
		  LEFT JOIN `sys_app_user` AS su ON su.`USER_ID` = lof.`user_id`
		WHERE lof.`order_type` = 'default' 
		  AND lof.is_delete = 0 AND lof.state='ADD'
		<if test=" nickName != null and nickName !='' ">
			AND su.`USERNAME` like CONCAT('%', #{nickName},'%')
		</if>
		<if test=" orderCode != null and orderCode !='' ">
			and lof.order_code  = #{orderCode}
		</if>
		<if test=" payOrderId != null and payOrderId !='' ">
			and lof.pay_order_id  = #{payOrderId}
		</if>
		<if test=" personPhone != null and personPhone !='' ">
			and su.`PHONE`  = #{personPhone}
		</if>
		<if test=" orderState != null and orderState !='' ">
			and lof.`order_state`  = #{orderState}
		</if>
		<if test=" orderTime != null and orderTime !='' ">
			and DATE_FORMAT(lof.`create_time`, '%Y-%m-%d')  = str_to_date(#{orderTime} , '%Y-%m-%d') 
		</if>
	</select>
	
	<!-- 查询订单列表信息 -->
	<select id="findOrderAppList" resultType="pd">
		SELECT 
		  lof.`id`,
		  lof.`create_time`,
		  lof.`pay_time`,
		  lof.`order_code`,
		  lof.`order_state`,
		  lof.`pay_order_id` AS payOrderId,
		  loi.`id` AS itemId,
		  loi.`price`,
		  loi.`down_payment`,
		  loi.`start_time`,
		  loi.`end_time`,
		  loi.`person_name`,
		  loi.`person_phone`,
		  loi.`pay_method`,
		  loi.`name`,
		  loi.total_km as totalKm,
		  sau.`USERNAME` AS username,
		  su.`USERNAME` AS assessor
		FROM
		  `lxy_order_form` AS lof
		  LEFT JOIN `lxy_order_item` AS loi ON lof.`id` = loi.`form_id`
		  LEFT JOIN `sys_app_user` AS sau ON sau.`USER_ID` = lof.`user_id`
		  LEFT JOIN `sys_user`  AS su ON su.`USER_ID` = lof.`assessor`
		  LEFT JOIN sys_role AS sr on sau.ROLE_ID = sr.ROLE_ID
		WHERE lof.`order_type` = 'default' 
		  AND lof.is_delete = 0 AND lof.state='ADD' AND sr.ROLE_NAME like CONCAT('%',#{name},'%')
		<if test=" nickName != null and nickName !='' ">
			AND sau.`USERNAME` like CONCAT('%', #{nickName},'%')
		</if>
		<if test=" orderCode != null and orderCode !='' ">
			and lof.order_code  = #{orderCode}
		</if>
		<if test=" payOrderId != null and payOrderId !='' ">
			and lof.pay_order_id  = #{payOrderId}
		</if>
		<if test=" personPhone != null and personPhone !='' ">
			and su.`PHONE`  = #{personPhone}
		</if>
		<if test=" orderState != null and orderState !='' ">
			and lof.`order_state`  = #{orderState}
		</if>
		<if test=" orderTime != null and orderTime !='' ">
			and DATE_FORMAT(lof.`create_time`, '%Y-%m-%d')  = str_to_date(#{orderTime} , '%Y-%m-%d') 
		</if>
		ORDER BY lof.`create_time` DESC
		<if test="showLine != null and showLine !='' ">
			LIMIT ${startLine} , ${showLine}
		</if>
	</select>
	
	<!--  -->
	<select id="findOrderAppListCount" resultType="Integer">
		select count(*) from (SELECT 
		  lof.`id`,
		  lof.`create_time`,
		  lof.`pay_time`,
		  lof.`order_code`,
		  lof.`order_state`,
		  lof.`pay_order_id` AS payOrderId,
		  loi.`id` AS itemId,
		  loi.`price`,
		  loi.`down_payment`,
		  loi.`start_time`,
		  loi.`end_time`,
		  loi.`person_name`,
		  loi.`person_phone`,
		  loi.`pay_method`,
		  loi.`name`,
		  loi.total_km as totalKm,
		  sau.`USERNAME` AS username,
		  su.`USERNAME` AS assessor
		FROM
		  `lxy_order_form` AS lof
		  LEFT JOIN `lxy_order_item` AS loi ON lof.`id` = loi.`form_id`
		  LEFT JOIN `sys_app_user` AS sau ON sau.`USER_ID` = lof.`user_id`
		  LEFT JOIN `sys_user`  AS su ON su.`USER_ID` = lof.`assessor`
		  LEFT JOIN sys_role AS sr on sau.ROLE_ID = sr.ROLE_ID
		WHERE lof.`order_type` = 'default' 
		  AND lof.is_delete = 0 AND lof.state='ADD' AND sr.ROLE_NAME like CONCAT('%',#{name},'%')
		<if test=" nickName != null and nickName !='' ">
			AND sau.`USERNAME` like CONCAT('%', #{nickName},'%')
		</if>
		<if test=" orderCode != null and orderCode !='' ">
			and lof.order_code  = #{orderCode}
		</if>
		<if test=" payOrderId != null and payOrderId !='' ">
			and lof.pay_order_id  = #{payOrderId}
		</if>
		<if test=" personPhone != null and personPhone !='' ">
			and su.`PHONE`  = #{personPhone}
		</if>
		<if test=" orderState != null and orderState !='' ">
			and lof.`order_state`  = #{orderState}
		</if>
		<if test=" orderTime != null and orderTime !='' ">
			and DATE_FORMAT(lof.`create_time`, '%Y-%m-%d')  = str_to_date(#{orderTime} , '%Y-%m-%d') 
		</if>) t
	</select>
	
	
	
	
	
	
	<!-- 获取退款列表 -->
	<select id="findRefundList" resultType="pd">
		SELECT 
		  lof.id as orderId,
		  lof.`order_code`,
		  lof.`pay_order_id`,
		  lof.`pay_type`,
		  lof.`order_state`,
		  
		  loi.`price`,
		  loi.`down_payment` AS downPayment,
		  loi.`name`,
		  
		  lor.`create_time`,
		  lor.`person_name`,
		  lor.`bank_name` AS bankName,
		  lor.`bank_no`,
		  lor.`finish_time`,
		  lor.id as refundId,
		  lor.is_check,
		  lor.reason,
		  
		  su.`USER_ID` AS userId,
		  su.`USERNAME` AS username,
		  su.`NAME` AS realname,
		  su.`PHONE` AS phone
		  
		FROM
		  lxy_order_form lof 
		  INNER JOIN lxy_order_refund lor 
		  	ON lor.`form_id` = lof.`id`
		  	AND lor.state = 'ADD'
		  INNER JOIN lxy_order_item loi 
    		ON loi.`form_id` = lof.`id` 
		  INNER JOIN sys_app_user su 
		    ON su.`USER_ID` = lof.`user_id`
		WHERE lof.`is_delete` = 0
		
		<if test=" name != null and name !='' ">
			and su.`USERNAME` like CONCAT('%', #{name},'%')
		</if>
		<if test=" orderCode != null and orderCode !='' ">
			and lof.order_code  = #{orderCode}
		</if>
		<if test=" payOrderId != null and payOrderId !='' ">
			and lof.pay_order_id  = #{payOrderId}
		</if>
		<if test=" personPhone != null and personPhone !='' ">
			and su.`PHONE`  = #{personPhone}
		</if>
		<if test=" orderState != null and orderState !='' ">
			and lof.`order_state` in (${orderState})
		</if>
		<if test=" orderTime != null and orderTime !='' ">
			and DATE_FORMAT(lof.`create_time`, '%Y-%m-%d')  = str_to_date(#{orderTime} , '%Y-%m-%d') 
		</if>
		
		<if test=" showLine != null and showLine !='' ">
			LIMIT ${startLine} , ${showLine}
		</if>
	</select>
	
	
	<select id="findRefundListCount" resultType="Integer">
		SELECT 
		  count(1)
		FROM
		  lxy_order_form lof 
		  INNER JOIN lxy_order_refund lor 
		  	ON lor.`form_id` = lof.`id`
		  	AND lor.state = 'ADD'
		  INNER JOIN lxy_order_item loi 
    		ON loi.`form_id` = lof.`id` 
		  INNER JOIN sys_app_user su 
		    ON su.`USER_ID` = lof.`user_id`
		WHERE lof.`is_delete` = 0
		
		<if test=" name != null and name !='' ">
			and su.`USERNAME` like CONCAT('%', #{name},'%')
		</if>
		<if test=" orderCode != null and orderCode !='' ">
			and lof.order_code  = #{orderCode}
		</if>
		<if test=" payOrderId != null and payOrderId !='' ">
			and lof.pay_order_id  = #{payOrderId}
		</if>
		<if test=" personPhone != null and personPhone !='' ">
			and su.`PHONE`  = #{personPhone}
		</if>
		<if test=" orderState != null and orderState !='' ">
			and lof.`order_state` in (${orderState})
		</if>
		<if test=" orderTime != null and orderTime !='' ">
			and DATE_FORMAT(lof.`create_time`, '%Y-%m-%d')  = str_to_date(#{orderTime} , '%Y-%m-%d') 
		</if>
	</select>
	
	<!-- 检验是否可以退款 -->
	<select id="checkExamine" resultType="Integer">
		select count(1) from lxy_order_form where order_state = 'REFUNDING' and id = #{orderId}
	</select>
	
	<!-- 更新审核状态为已审核 -->
	<update id="updateCheck">
		UPDATE 
		  lxy_order_refund wor 
		SET
		  wor.`is_check` = 0
		<!-- 如果退款完成，则修改退款完成时间 -->
		<if test=" state != null and state !='' and state == 'REFUNDED' ">
			, wor.`finish_time` = NOW() 
		</if>
		WHERE wor.`id` = #{refundId}
		  AND wor.`is_check` = 1 
	</update>
	
	<!-- 新增一条审核记录 -->
	<insert id="addExamine">
		insert into lxy_order_examine
		(create_time, form_id, reason, result)
		values
		(NOW(), #{orderId}, #{reason}, #{result})
	</insert>
	
	<select id="findRefundInfo" resultType="pd">
		SELECT 
		  su.`USER_ID` AS userId,
		  su.`USERNAME` AS username,
		  su.`NAME` AS realname,
		  su.`PHONE` AS phone,
		  
		  lor.`reason` AS tkReason,
		  lor.`person_name`,
		  lor.`bank_name`,
		  lor.`bank_no`, 
		  lof.order_code
		  
		FROM
		  lxy_order_refund lor 
		  INNER JOIN lxy_order_form lof 
		    ON lof.`id` = lor.`form_id` 
		  INNER JOIN sys_app_user su 
		    ON su.`USER_ID` = lof.`user_id`
		WHERE lor.`form_id` = #{orderId}
		  and lor.state = 'ADD'
	</select>
	
	<select id="findExamineList" resultType="pd">
		SELECT 
		  woe.create_time,
		  woe.reason,
		  woe.result
		FROM
		  lxy_order_examine woe 
		WHERE woe.form_id = #{orderId}
		order by woe.create_time desc
	</select> 
	
	<!--路线审核成功 start-->
		<!-- 总公里数修改-->
		<update id="editTotalKm">
			UPDATE lxy_order_item SET total_km = #{totalKm}
			WHERE id = #{itemId}
		</update>
		
		<!--路线公里数审核完成后更新订单状态为WAITPAY -->
		<update id="updateToCheckSuccess" parameterType="pd">
			update lxy_order_form  set order_state = 'CHECKSUCCESS',assessor = #{assessor} where id=#{id}
		</update>
		
		<!--根据总公里数更新总价格  -->
		<update id="updatePrice" parameterType="pd">
			update lxy_order_item SET price = 
			<!--查找订单中的车的总单价  -->
			(select sum(lct.price) as totalPrice from lxy_car_info lci
			left join lxy_car_type lct on lci.car_type_id = lct.id
			left join lxy_car_state lcs on lci.id = lcs.car_id
			where lcs.id in(car_ids))
			<!--乘以总公里数  -->
			*total_km
			where id = #{itemId}
		</update>
	<!--路线审核成功end-->
	
	
	<!--路线审核不成功  start-->
		<!--将订单状态置为CHECKFAIL  -->
		<update id="updateToCheckFail" parameterType="pd">
			update lxy_order_form set order_state = 'CHECKFAIL',assessor=#{assessor} where id=#{id}
		</update>
		<!--根据订单id查询订单所锁定的车辆状态记录id  -->
		<select id="getCarStateIdsByOrderId" parameterType="pd" resultType="java.lang.String">
			select loi.car_ids from lxy_order_form lof left join lxy_order_item loi on lof.id = loi.form_id where lof.id = #{id}
		</select>
		<update id="updateCarState" parameterType="pd">
			UPDATE lxy_car_state SET 
			use_state = #{newState}
			WHERE use_state = #{oldState} AND id IN(${carStateIds})
		</update>
	<!--路线审核不成功end  -->
	
	<update id="deleteOrder">
		UPDATE lxy_order_form SET is_delete=1 WHERE id=#{id}
	</update>
	
	<!--获取联系人信息  -->
	<select id="getPersonInfo" parameterType="pd" resultType="pd">
		select loi.person_phone as personPhone,sau.EMAIL as personEmail from lxy_order_form lof 
		LEFT JOIN lxy_order_item loi ON lof.id = loi.form_id
		LEFT JOIN sys_app_user sau ON lof.user_id = sau.USER_ID
		where lof.id = #{id}
	</select>
	
	<!--获取订单总公里数和价格  -->
	<select id="getTkPriceById" parameterType="pd"  resultType="pd">
		select total_km as totalKm,price from lxy_order_item  where id = #{itemId}
	</select>
	
	<!--根据id获取订单号  -->
	<select id="getOrderCodeById" parameterType="pd" resultType="java.lang.String">
		select order_code as orderCode from lxy_order_form where id = #{id} 
	</select>
	
</mapper>