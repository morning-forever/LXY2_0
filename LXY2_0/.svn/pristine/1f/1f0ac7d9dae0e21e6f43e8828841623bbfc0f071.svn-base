<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CarManagerMapper">
	
	<!-- 车类型********************************************** -->
	<!-- 新增-->
	<insert id="saveCarType" parameterType="pd">
		insert into lxy_car_type(name, seat_num, count) values (#{carName},	#{seatNum},	#{count})
	</insert>
	
	<!-- 删除-->
	<delete id="deleteCarType" parameterType="pd">
		delete from lxy_car_type where id = #{id}
	</delete>
	
	<!-- 修改 -->
	<update id="editCarType" parameterType="pd">
		update  lxy_car_type
			set 
				name = #{carName},
				seat_num = #{seatNum},
				count = #{count}
			where 
				id = #{id}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="getCarTypeById" parameterType="pd" resultType="pd">
		select * from lxy_car_type
		where id = #{id}
	</select>
	
	<!-- 通过ID获取数据 -->
	<select id="getCarType" parameterType="pd" resultType="pd">
		select id AS typeId, price, seat_num AS seatNum, name from lxy_car_type
	</select>
	
	<!-- 车信息 **********************************************-->
	<insert id="addCarInfo" parameterType="pd">
		insert into lxy_car_info(car_identifier, plate_number, car_type_id, car_owner, car_owner_phone, grade_evaluate_start_time, grade_evaluate_end_time, compulsory_traffic_insurance_time, commercial_insurance_time, carriage_insurance_time, check_start_time, check_end_time, manager_start_time, manager_end_time, driving_license_regtime, driver_id, trip_rate) 
		values (#{carIdentifier}, #{plateNumber}, #{carTypeId}, #{carOwner}, #{carOwnerPhone}, #{gradeEvaST}, #{gradeEvaET}, #{comTraInsTime}, #{comInsTime}, #{carInsTime}, #{checkST}, #{checkET}, #{managerST}, #{managerET}, #{drivingLicRegT}, #{driverId}, #{tripRate})
	</insert>
	
	<delete id="deleteCarInfo" parameterType="pd">
		delete from lxy_car_info where id = #{id}
	</delete>
	
	
	<!-- 修改 -->
	<update id="editCarInfo" parameterType="pd">
		update  lxy_car_info set
			driver_id = #{count}
		where id = #{id}
	</update> 
	
	<!-- 通过ID获取数据 -->
	<select id="getCarInfoById" parameterType="pd" resultType="pd">
		select * from lxy_car_info
		where id = #{id}
	</select>
	
	<!-- 获取同一类型车的相关信息-->
	<select id="getCarInfoByType" parameterType="pd" resultType="pd">
		SELECT lci.id AS carId, lci.trip_rate AS tripRate, lci.driver_id AS driverId, lci.plate_number AS plateNum,
		lct.id AS typeId, lct.name, lct.seat_num AS seatNum, lct.price,ld.name as driverName,ld.tel as driverTel
		FROM lxy_car_info AS lci
		LEFT JOIN lxy_car_type AS lct ON lct.id=lci.car_type_id
		LEFT JOIN lxy_driver AS ld ON lci.driver_id = ld.id
		WHERE lci.car_type_id = #{carType} AND lci.state='ADD'
	</select>
	
	<select id="getCarInfoByType1" parameterType="Long" resultType="pd">
		select id AS carId, trip_rate AS tripRate, driver_id AS driverId, plate_number AS plateNum
		from lxy_car_info where car_type_id = #{carType} AND state='ADD'
	</select>
	
	<!-- 获取车的出行次数-->
	<select id="getCarTripRate" parameterType="pd" resultType="Long">
		select trip_rate from lxy_car_info
		where id = #{id}
	</select>
	
	<select id="getCarTripRateByStateId" parameterType="pd" resultType="pd">
		select lci.id, lci.trip_rate from lxy_car_state as lct
		left join lxy_car_info as lci on lci.id=lct.car_id
		where lct.id IN(${stateIds})
	</select>
	
	<!-- 增加车的出行次数-->
	<update id="addCarTripRate" parameterType="pd">
		update  lxy_car_info set
			trip_rate = #{tripRate} where id = #{id}
	</update>
	
	<!-- 车状态 **********************************************-->
	<insert id="insertCarState" parameterType="pd" useGeneratedKeys="true" keyProperty="id">
		insert into lxy_car_state(create_time, start_time,end_time, car_id, user_id, use_state) 
		values (NOW(), #{startTime}, #{endTime}, #{carId}, #{userId}, #{useState})
	</insert>
	
	<update id="updateCarState" parameterType="pd">
		UPDATE lxy_car_state SET 
		use_state = #{newState}
		WHERE use_state = #{oldState} AND id IN(${carStateIds})
	</update>
	
	<update id="deleteCarState" parameterType="pd">
		update  lxy_car_state set
			state = 'DEL' where id IN(${ids}) 
	</update>
	
	<!-- 获取用户车辆信息 -->
	<select id="getCarInfoWithLocked" parameterType="pd" resultType="pd">
		SELECT lcs.id, lcs.start_time AS startTime,
		lcs.end_time AS endTime,
		lcs.car_id AS carId,
		lci.plate_number AS plateNumber,
		lct.name,
		lct.seat_num AS seatNum 
		FROM lxy_car_state AS lcs
		LEFT JOIN lxy_car_info AS lci ON lci.id=lcs.car_id
		LEFT JOIN lxy_car_type AS lct ON lct.id=lci.car_type_id
		WHERE lcs.id=#{id } 
	</select>
	
	<!-- 获取当天使用车辆-->
	<select id="getCarByTime" parameterType="pd" resultType="pd">
		SELECT * 
		FROM lxy_car_state AS lcs
		JOIN lxy_car_info AS lci ON lci.id=lcs.car_id and lci.car_type_id=#{carType}
		WHERE '${stime }' &gt;= lcs.start_time  AND lcs.end_time &gt;= '${stime }' AND lcs.state='ADD'; 
	</select>
	
	<!-- 获取指定时间指定类型车的使用情况-->
	<select id="getCarByTT" parameterType="pd" resultType="pd">
		SELECT lcs.car_id
		FROM lxy_car_state AS lcs 
		JOIN lxy_car_info AS lci ON lci.id=lcs.car_id AND lci.car_type_id=#{carType} AND lcs.use_state IN(${carUseState})
		where (lcs.start_time BETWEEN #{startTime} AND #{endTime}) or
	  		  (lcs.end_time BETWEEN #{startTime} AND #{endTime}) or
	  		  (#{startTime} BETWEEN lcs.start_time AND lcs.end_time) or
	  		  (#{endTime} BETWEEN lcs.start_time AND lcs.end_time)
	</select>
	
	<!-- 获取用户要购买车辆信息-->
	<select id="getCarByIds" parameterType="pd" resultType="pd">
		SELECT lcs.id as carStaId,
		lci.car_type_id AS carTypeId,
		lci.plate_number,
		ld.id AS driverId,
		lci.trip_rate AS tripRate,
		lci.id AS carId,
		lct.name AS carName,
		lct.seat_num AS seatNum,
		lct.price,
		lcs.use_state,
		lcs.is_sms_dri as isSmsDri,
		lcs.start_time as startTime,
		ld.name,
		ld.tel
		FROM lxy_car_state AS lcs
		LEFT JOIN lxy_car_info AS lci ON lcs.car_id=lci.id
		LEFT JOIN lxy_car_type AS lct ON lct.id=lci.car_type_id
		LEFT JOIN lxy_driver as ld ON ld.id = lci.driver_id
		WHERE lcs.id in(${carStateIds}) <!-- AND lcs.use_state='ADD' -->
	</select>
	
	<!-- 关闭没绑定的车辆-->
	<!-- <update id="unbindCarInTime">
		UPDATE lxy_car_state SET use_state = 'NO'
		WHERE use_state = 'WAITLOCK' AND state='ADD'
		AND DATE_ADD(create_time, INTERVAL 1 MINUTE) &lt; NOW()
	</update> -->
	
	<update id="unbindCarInTime">
		UPDATE lxy_car_state SET use_state = 'OVERTIMEL'
		WHERE use_state = 'LOCKED' AND state='ADD'
		AND DATE_ADD(create_time, INTERVAL 10 MINUTE) &lt; NOW()
	</update>
	
	<select id="getCarUseStateByIds" parameterType="pd" resultType="pd">
		SELECT state, use_state FROM lxy_car_state
		WHERE id IN(${ids})
	</select>
	
	
	
	<!-- *****************************gcy ****************************-->
	<!-- 查可使用车辆列表 -->
	<select id="getAvailableCars" resultType="pd" parameterType="pd">
			<!--总共-已使用 = 可使用  -->
		select  tb_t.id as typeId,tb_t.`name`,tb_t.seat_num as seatNum,tb_t.price,tb_t.total- IFNULL(tb_u.used,0)  as availableCarNum from 
			<!--查出每一种类型总共有多少车  -->
			(select lct.id,lct.`name`,lct.seat_num,lct.price,count(lci.id) as total from lxy_car_type lct 

			LEFT JOIN lxy_car_info lci  ON lci.car_type_id =  lct.id

			GROUP BY lct.id) tb_t

		LEFT JOIN  
		
			<!--查出每一种类型已经使用了多少车  -->
			(select lct.id,lct.`name`,count(DISTINCT lci.id) used from lxy_car_state lcs 
			
			LEFT JOIN lxy_car_info lci ON lcs.car_id = lci.id
			LEFT JOIN lxy_car_type lct ON lct.id = lci.car_type_id
			
			WHERE 
			(lcs.use_state IN(${carUseState})) AND
			
			((lcs.start_time BETWEEN #{startTime} AND #{endTime}) or
			(lcs.end_time BETWEEN #{startTime} AND #{endTime}) or
			(#{startTime} BETWEEN lcs.start_time AND lcs.end_time) or
			(#{endTime} BETWEEN lcs.start_time AND lcs.end_time) )
			
			GROUP BY lct.id for update) tb_u ON tb_t.id = tb_u.id ORDER BY tb_t.id ASC
	</select>
	
	<!--查出将要被锁定的车辆 -->
	<select id="getWillBeLockedCars" parameterType="com.lx.bo.LockCar" resultType="pd">
		
		<!-- 循环查找每一种类型的车应该分配的具体车辆 -->
		<foreach collection="needCars" item="item" separator=" UNION ">
			
			<!-- 查找每一种类型的车应该分配的具体车辆  -->
			(select lci.id,lci.plate_number as plateNumber,lct.id as typeId,lct.`name`,lct.price,lct.seat_num as seatNum from lxy_car_info lci

				LEFT JOIN lxy_car_type lct  ON lci.car_type_id = lct.id

			where lci.car_type_id=#{item.typeId} and lci.id NOT IN
				
				<!--要分配的具体车辆一定不能是"已被占用"状态  -->
				(select DISTINCT lcs.car_id from lxy_car_state  lcs
				
				 LEFT JOIN lxy_car_info lci ON lcs.car_id = lci.id
						
				WHERE lct.id = #{item.typeId} and lcs.use_state in ("LOCKED","BINDROUTE") 
				
				and 
				
				((#{startTime} between lcs.start_time and lcs.end_time) or (lcs.start_time between #{startTime} and #{endTime})) for update
				)
			
			ORDER BY trip_rate ASC,id ASC  LIMIT 0,#{item.count})
		</foreach>
		order by seatNum asc
	</select>
	
	<!--分配车辆，将其锁定  -->
	<insert id="lockCars" parameterType="com.lx.bo.LockCar">
		insert into  lxy_car_state(state,create_time,start_time,end_time,car_id,user_id,use_state) values
		<foreach collection="willBeLockedCars" item="item" separator=",">
			('ADD',NOW(),#{startTime},#{endTime},#{item.id},#{userId},'LOCKED')			
		</foreach>
	</insert>
	
	<!-- 查出锁车信息的id列表 -->
	<select id="getCarStateIds" parameterType="com.lx.bo.LockCar" resultType="java.lang.Long">
		select id from lxy_car_state where start_time = #{startTime} and end_time = #{endTime} and car_id in
		<foreach collection="willBeLockedCars" item="car" separator="," open="(" close=")">
			#{car.id}
		</foreach>
	</select>
	
	
	<!--更新车辆的出行率  -->
	<update id="batchUpdateCarTripRate" parameterType="java.util.List">
		update lxy_car_info set trip_rate=trip_rate+1 where id in
		
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item.id}			
		</foreach>
	</update>
	
	<!--根据carStateIds分组查出每一种车及其数量  -->
   <select id="getCarGroups" parameterType="pd" resultType="pd">
   		SELECT lct.`name` as carType,COUNT(*) as carCount from lxy_car_state lcs
		LEFT JOIN lxy_car_info lci ON lcs.car_id = lci.id 
		LEFT JOIN lxy_car_type lct ON lct.id = lci.car_type_id
		where lcs.id in(${carStateIds})
		GROUP BY lct.`name` 
   </select>
	
	<!--车辆基本信息查询-->
	<select id="getCarInfoListCount" parameterType="pd" resultType="java.lang.Integer">
		select count(*) from (select lci.id,lct.`name`,lci.plate_number,lct.seat_num ,lct.price  from lxy_car_info  lci
		
		LEFT JOIN lxy_car_type  lct on lci.car_type_id = lct.id
		
		<where>
			lci.is_valid = 1
			<if test="carTypeName != null and carTypeName != ''">
				and lct.name = #{carTypeName}
			</if>
			<if test="plateNumber != null and plateNumber != ''">
				and lci.plate_number = #{plateNumber}
			</if>
			<if test="seatNum != null and seatNum != ''" >
				and lct.seat_num = #{seatNum}
			</if>
			<if test="price != null and price != '' ">
				and lct.price = #{price}
			</if>
		</where>) t
	</select>
	
	<select id="getCarInfoList" parameterType="pd" resultType="pd">
		select lci.id,lct.`name`,lci.plate_number,lct.seat_num ,lct.price,lci.driver_id  from lxy_car_info  lci
		LEFT JOIN lxy_car_type  lct on lci.car_type_id = lct.id 
		<where>
			lci.is_valid = 1
			<if test="carTypeName != null and carTypeName != ''">
				and lct.name = #{carTypeName}
			</if>
			<if test="plateNumber != null and plateNumber != ''">
				and lci.plate_number = #{plateNumber}
			</if>
			<if test="seatNum != null and seatNum != ''" >
				and lct.seat_num = #{seatNum}
			</if>
			<if test="price != null and price != '' ">
				and lct.price = #{price}
			</if>
		</where>
		
		<if test="showLine != null and showLine !='' ">
			LIMIT ${startLine} , ${showLine}
		</if>
	</select>
	
	<!--新增一辆车  -->
	<insert id="insertOneCar" parameterType="pd">
		insert into lxy_car_info(create_time,plate_number,car_type_id) values(NOW(),#{plateNumber},#{carTypeId})
	</insert>
	<!--删除一辆车  -->
	<delete id="deleteOneCar" parameterType="java.lang.Long">
		delete from lxy_car_info where id = #{id}
	</delete>
	<!-- 逻辑删除 -->
	<update id="logicDelOneCar" parameterType="java.lang.Long">
		update lxy_car_info set is_valid=0 where id = #{id}
	</update>	
	<!--查询一辆车 -->
	<select id="getOneCarById" parameterType="java.lang.Long" resultType="pd">
		SELECT  lci.id,lct.name,lct.seat_num as seatNum,lci.plate_number as plateNumber from lxy_car_info  lci 
		
		LEFT JOIN lxy_car_type lct ON lci.car_type_id = lct.id where  lci.id=#{id}
	</select>
	
	<!--更新一辆车  -->
	<update id="updateOneCar" parameterType="pd">
		update lxy_car_info set plate_number=#{plateNumber} where id=#{id}
	</update>
	
	<!--绑定司机  -->
	<update id="bindDriver" parameterType="pd">
		update lxy_car_info set driver_id = #{driverId} where id = #{carId}
 	</update>	
	
</mapper>

